// Tamanhos de viewport do ponto de interrupção e consultas de mídia.
//
// Os pontos de interrupção são definidos como um mapa de (nome: largura mínima), ordem de pequena a grande:
//
// (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// O mapa definido na variável global `$ grid-breakpoints` é usado como argumento` $ breakpoints` por padrão.

// Nome do próximo ponto de interrupção ou nulo para o último ponto de interrupção.
//
// >> breakpoint-next (sm)
// md
// >> breakpoint-next (sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
// md
// >> ponto de interrupção-próximo (sm, $ nomes do ponto de interrupção: (xs sm md lg xl))
// md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Largura mínima do ponto de interrupção. Nulo para o menor (primeiro) ponto de interrupção.
//
// >> breakpoint-min (sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
// 576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Largura máxima do ponto de interrupção. Nulo para o maior (último) ponto de interrupção.
// O valor máximo é calculado como o mínimo do próximo menos 0,02 px
// para contornar as limitações dos prefixos e viewports `min-` e `max-` com larguras fracionárias.
// Veja https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Usa 0,02px em vez de 0,01px para contornar um bug de arredondamento atual no Safari.
// Veja https://bugs.webkit.org/show_bug.cgi?id=178261
//
// >> breakpoint-max (sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
// 767,98 px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);
}

// Retorna uma string em branco se for o menor breakpoint, caso contrário, retorna o nome com um traço na frente.
// Útil para fazer utilitários responsivos.
//
// >> ponto de interrupção-infixo (xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
// "" (retorna uma string em branco)
// >> infográfico de pontos de interrupção (sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
// "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

// Mídia de pelo menos a largura mínima do ponto de interrupção. Nenhuma consulta para o menor ponto de interrupção.
// Faz o @content se aplicar ao ponto de interrupção dado e mais amplo.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Mídia de no máximo a largura máxima do ponto de interrupção. Nenhuma consulta para o maior ponto de interrupção.
// Faz com que o @content se aplique ao ponto de interrupção determinado e mais estreito.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Mídia que abrange várias larguras de ponto de interrupção.
// Faz o @content se aplicar entre os pontos de interrupção min e max
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}

// Mídia entre as larguras mínima e máxima do ponto de interrupção.
// Nenhum mínimo para o menor ponto de interrupção e nenhum máximo para o maior.
// Faz com que o @content se aplique apenas ao ponto de interrupção determinado, e não às viewports mais largas ou mais estreitas.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $max: breakpoint-max($name, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}