//
// Geração de grade do framework
//
// Usado para gerar o número correto de classes de grade dadas
// qualquer valor de `$ grid-columns`.

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Propriedades Comuns para Todos os Pontos de Interrupção
  %grid-column {
    position: relative;
    width: 100%;
    min-height: 1px; // Impedir que as colunas entrem em colapso quando vazias
    padding-right: ($gutter / 2);
    padding-left: ($gutter / 2);
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // Permitir que as colunas estiquem a largura total abaixo de seus pontos de interrupção
    @for $i from 1 through $columns {
      .col#{$infix}-#{$i} {
        @extend %grid-column;
      }
    }
    .col#{$infix},
    .col#{$infix}-auto {
      @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Fornece classes `.col- {bp}` básicas para colunas flexbox de largura igual
      .col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      .col#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: none; // Redefinir os níveis de grade anteriores
      }

      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @include make-col($i, $columns);
        }
      }

      .order#{$infix}-first { order: -1; }

      .order#{$infix}-last { order: $columns + 1; }

      @for $i from 0 through $columns {
        .order#{$infix}-#{$i} { order: $i; }
      }

      // `$columns - 1` porque não é possível compensar pela largura de uma linha inteira
      @for $i from 0 through ($columns - 1) {
        @if not ($infix == "" and $i == 0) { // Evite emitir sem utilidade .offset-0
          .offset#{$infix}-#{$i} {
            @include make-col-offset($i, $columns);
          }
        }
      }
    }
  }
}